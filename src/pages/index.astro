---
import Layout from "../layouts/Layout.astro";
import Footer from "../components/Footer.astro";
---

<Layout title="Welcome to Astro." kind={1}>
	<div class="flex justify-center">Logo</div>
	<main class="grid place-items-center">
		<form
			id="formlogin"
			class="text-center grid place-items-center gap-y-5 py-8 px-10 bg-amber-500 rounded-lg shadow-md w-fit"
		>
			<label class="text-lg">
				Correo electrónico o usuario <br />
				<input
					name="emailusuario"
					type="text"
					placeholder="vj.santonjaivorra@edu.gva.es"
					class="w-[240px] bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5"
				/>
			</label>
			<label class="text-lg">
				Contraseña <br />
				<input
					name="password"
					type="password"
					placeholder="Contraseña"
					class="w-full text-sm px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
				/>
			</label>
			<button
				type="submit"
				class="bg-blue-500 text-white font-bold py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50"
				>Iniciar sesión</button
			>
			<a href="#" id="enlace">¿Olvidaste tu contraseña?</a>
		</form>
	</main>
	<Footer />
</Layout>

<script>
	const form = document.querySelector("#formlogin") as HTMLFormElement;
	const url = "http://localhost:4321/api/login";

	async function sendData(e: Event) {
		e.preventDefault();
		const data = {
			emailusuario: form.emailusuario.value,
			password: form.password.value,
		};
		const response = await fetch(url, {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
			},
			body: JSON.stringify(data),
		});
		if (response.ok) {
			let json = await response.json();
			alert(json.message);
			localStorage.setItem("user", json.user);
			window.location.href = "/empresa";
		} else {
			alert("Error al iniciar sesión");
		}
	}

	form.addEventListener("submit", sendData);
</script>

<!-- <style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
 -->
